// <auto-generated />
using System;
using Adaptadores.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adaptadores.Migrations
{
    [DbContext(typeof(SiegContext))]
    [Migration("20240209010909_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Entidades.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("archar(250)")
                        .HasColumnName("bairro");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("archar(250)")
                        .HasColumnName("celular");

                    b.Property<string>("Cep")
                        .HasMaxLength(20)
                        .HasColumnType("archar(250)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("archar(250)")
                        .HasColumnName("cidade");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("archar(250)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(150)
                        .HasColumnType("archar(250)")
                        .HasColumnName("endereco");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NomeDoCliente")
                        .HasMaxLength(200)
                        .HasColumnType("archar(250)")
                        .HasColumnName("cliente");

                    b.Property<string>("StatusDoCliente")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ativo_cliente");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("archar(250)")
                        .HasColumnName("uf");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.ControleEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Column1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("archar(250)")
                        .HasColumnName("column1");

                    b.HasKey("Id");

                    b.ToTable("ControleEstoques", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.EntradaDoProduto", b =>
                {
                    b.Property<int>("IdEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_entrada");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntrada"));

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("date")
                        .HasColumnName("data_entrada");

                    b.Property<TimeSpan?>("HoraEntrada")
                        .HasColumnType("time")
                        .HasColumnName("hora_entrada");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.Property<string>("MotivoEntrada")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("motivo_entrada");

                    b.Property<int>("QtdeEntrada")
                        .HasColumnType("int")
                        .HasColumnName("qtde_entrada");

                    b.HasKey("IdEntrada");

                    b.ToTable("EntradaDoProdutos", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.Fornecedo", b =>
                {
                    b.Property<int>("IdFornecedo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_fornecedo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFornecedo"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("bairro");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("celular");

                    b.Property<string>("Cep")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("cidade");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("endereco");

                    b.Property<string>("NomeDoFornecedor")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("fornecedo");

                    b.Property<int>("StatusDoFornecedor")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("ativo_fornecedo");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("uf");

                    b.HasKey("IdFornecedo");

                    b.ToTable("Fornecedores", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.Iten", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_item");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.Property<int>("IdVenda")
                        .HasColumnType("int")
                        .HasColumnName("id_venda");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("preco");

                    b.Property<int>("Qtde")
                        .HasColumnType("int")
                        .HasColumnName("qtde");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("IdItem");

                    b.ToTable("Itens", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.Movimentacao", b =>
                {
                    b.Property<int>("IdMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_movimentacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimentacao"));

                    b.Property<int>("DataMovimentacao")
                        .HasColumnType("int")
                        .HasColumnName("data_movimentacao");

                    b.Property<int>("HoraMovimentacao")
                        .HasColumnType("int")
                        .HasColumnName("hora_movimentacao");

                    b.Property<int>("IdEntradaSaida")
                        .HasColumnType("int")
                        .HasColumnName("id_entrada_saida");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.Property<int>("Motivo")
                        .HasColumnType("int")
                        .HasColumnName("motivo");

                    b.Property<int>("Qtde")
                        .HasColumnType("int")
                        .HasColumnName("qtde");

                    b.Property<int>("TipoMovimentacao")
                        .HasColumnType("int")
                        .HasColumnName("tipo_movimentacao");

                    b.HasKey("IdMovimentacao");

                    b.ToTable("Movimentacoes", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"));

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("int")
                        .HasColumnName("estoque_atual");

                    b.Property<int>("EstoqueInicial")
                        .HasColumnType("int")
                        .HasColumnName("estoque_inicial");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int")
                        .HasColumnName("estoque_minimo");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("archar(250)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("preco");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.SaidaDeProduto", b =>
                {
                    b.Property<int>("IdSaida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_saida");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSaida"));

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("date")
                        .HasColumnName("data_saida");

                    b.Property<TimeSpan?>("HoraSaida")
                        .HasColumnType("time")
                        .HasColumnName("hora_saida");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("id_produto");

                    b.Property<string>("MotivoSaida")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("motivo_saida");

                    b.Property<int>("QtdeSaida")
                        .HasColumnType("int")
                        .HasColumnName("qtde_saida");

                    b.HasKey("IdSaida");

                    b.ToTable("SaidaDeProdutos", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("AtivoUsuario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("ativo_usuario");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("login");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("archar(250)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios", "SIEG");
                });

            modelBuilder.Entity("Dominio.Entidades.VendaDeProduto", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venda");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenda"));

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("date")
                        .HasColumnName("data_venda");

                    b.Property<TimeSpan>("HoraVenda")
                        .HasColumnType("time")
                        .HasColumnName("hora_venda");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<decimal>("TotalVenda")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_venda");

                    b.HasKey("IdVenda");

                    b.ToTable("VendaDeProdutos", "SIEG");
                });
#pragma warning restore 612, 618
        }
    }
}
